#!/usr/bin/env node

console.log('üîç DIAGN√ìSTICO DE INICIO DEL SERVIDOR');
console.log('=====================================');

// Verificar variables de entorno
console.log('\nüìã VARIABLES DE ENTORNO:');
console.log('NODE_ENV:', process.env.NODE_ENV || 'NO DEFINIDA');
console.log('PORT:', process.env.PORT || 'NO DEFINIDA');
console.log('DB_HOST:', process.env.DB_HOST || 'NO DEFINIDA');
console.log('DB_USER:', process.env.DB_USER || 'NO DEFINIDA');
console.log('DB_NAME:', process.env.DB_NAME || 'NO DEFINIDA');
console.log('DB_PORT:', process.env.DB_PORT || 'NO DEFINIDA');
console.log('DB_PASSWORD:', process.env.DB_PASSWORD ? 'DEFINIDA' : 'NO DEFINIDA');

// Verificar si los m√≥dulos existen
console.log('\nüì¶ VERIFICANDO M√ìDULOS:');
try {
  require('./src/app');
  console.log('‚úÖ app.js - OK');
} catch (error) {
  console.log('‚ùå app.js - ERROR:', error.message);
}

try {
  require('./src/config/database');
  console.log('‚úÖ database.js - OK');
} catch (error) {
  console.log('‚ùå database.js - ERROR:', error.message);
}

try {
  require('./src/socket');
  console.log('‚úÖ socket.js - OK');
} catch (error) {
  console.log('‚ùå socket.js - ERROR:', error.message);
}

try {
  require('./src/services/cartCleanupService');
  console.log('‚úÖ cartCleanupService.js - OK');
} catch (error) {
  console.log('‚ùå cartCleanupService.js - ERROR:', error.message);
}

// Verificar package.json
console.log('\nüìÑ VERIFICANDO PACKAGE.JSON:');
try {
  const packageJson = require('./package.json');
  console.log('‚úÖ package.json - OK');
  console.log('   Main:', packageJson.main || 'NO DEFINIDO');
  console.log('   Scripts:', Object.keys(packageJson.scripts || {}));
} catch (error) {
  console.log('‚ùå package.json - ERROR:', error.message);
}

console.log('\nüéØ DIAGN√ìSTICO COMPLETADO');
console.log('=====================================');
